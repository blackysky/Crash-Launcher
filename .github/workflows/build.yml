name: Build

on:
  push:
    branches:
      - master
    paths:
      - 'build/**'
      - 'scripts/*'
      - 'src/**'
      - 'static/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 15
      uses: actions/setup-node@v2-beta
      with:
        node-version: 15
    - name: Use npm 7
      run: npm install -g npm@7
    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: |
        npm ci
    - name: Get Build Number
      uses: ./.github/actions/get-build-number
      id: vars
    - name: Lint
      run: |
        npm run lint
    - name: Build
      run: |
        npm run build:production
      env:
        BUILD_NUMBER: ${{ steps.vars.outputs.build_number }}
        FULL_RELEASE: ${{ startsWith(github.event.commits[0].message, 'chore(release)') }}
    - name: Upload Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          build/*.*
          build/nsis-web/*.*
    - name: Upload Windows Asar
      if: ${{ runner.os == 'Windows' && startsWith(github.event.commits[0].message, 'chore(release)') }} 
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          build/win-unpacked/resources/app.asar
          build/win-unpacked/resources/app.asar.sha256

  repare-release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !startsWith(github.event.commits[0].message, 'chore(release)') }}

    steps:
    - uses: actions/checkout@v2
    - name: Fetch All
      run: git fetch --prune --unshallow
    - name: Use Node.js 15
      uses: actions/setup-node@v2-beta
      with:
        node-version: 15
    - name: Use npm 7
      run: npm install -g npm@7
    - name: Install
      run: |
        npm ci
      env:
        CI: true
    - name: Bump Version
      id: version
      uses: ./.github/actions/bump-version

    - name: Prepare Pull Reuqest
      if: ${{ steps.version.outputs.release == 'true' }}
      id: pr
      uses: ./.github/actions/prepare-pr

    - name: Create Pull Request
      if: ${{ steps.version.outputs.release == 'true' }}
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: ${{ steps.pr.outputs.message }}
        title: ${{ steps.pr.outputs.title }}
        body: ${{ steps.pr.outputs.body }}
        reviewers: ci010
        assignees: ci010
        branch: prepare-release

  release:
    if: startsWith(github.event.commits[0].message, 'chore(release)')
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 15
      uses: actions/setup-node@v2-beta
      with:
        node-version: 15
    - name: Use npm 7
      run: npm install -g npm@7
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: |
        npm ci
    - name: Download Build
      uses: actions/download-artifact@v2
      with:
        name: build
        path: build
    - uses: ./.github/actions/generate-mcbbs-content
    - name: Upload Mcbbs Content
      uses: actions/upload-artifact@v2
      with:
        name: mcbbs
        path: mcbbs
    - name: Prepare Release
      id: prepare_release
      uses: ./.github/actions/prepare-release
    - name: Draft Release
      id: create_release
      uses: voxelum/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.prepare_release.outputs.tag }}
        release_name: ${{ steps.prepare_release.outputs.release }}
        draft: false
        prerelease: false
        body: ${{ steps.prepare_release.outputs.body }}
        asset_dir_path: ./build
    - name: Update the latest-version.js
      run: |
        node --eval "console.log('const version = \"' + JSON.parse(require('fs').readFileSync('package.json').toString()).version + '\"')" > build/latest-version.js
    - name: Upload to Azure
      uses: ci010/upload-blob-to-azure@master
      env:
        AZURE_ACCOUNT_KEY: ${{ secrets.AZURE_ACCOUNT_KEY }}
      with:
        account: xmcl
        container: releases
        directory: ./build
